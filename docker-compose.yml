version: '3.8'

services:
  postgres:
    image: postgres
    container_name: postgres_container
    environment:
      POSTGRES_USER: luis
      POSTGRES_PASSWORD: 178aj900
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    restart: always
    networks:
      - landbike_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend_container
    volumes:
      - .:/app_django
    ports:
      - "8000:8000"
    command: sh -c "./wait-for-it.sh postgres:5432; python manage.py showmigrations; python manage.py makemigrations; python manage.py migrate; python manage.py runserver 0.0.0.0:8000"
    environment:
      - PG_USER=luis
      - PG_PASSWORD=178aj900
      - PG_DB=landbike
      - PG_PORT=5432
      - PG_HOST=postgres
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - landbike_network


  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: frontend_container
    ports:
      - "5173:5173"
    restart: always
    networks:
      - landbike_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    environment:
      PGADMIN_DEFAULT_EMAIL: 'admin@admin.com'
      PGADMIN_DEFAULT_PASSWORD: 'root'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: always
    networks:
      - landbike_network

  nginx:
    image: nginx:latest
    container_name: nginx_loadbalancer
    ports:
      - "8080:80"
    volumes:
      - ./loadbalancer/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    command: ["nginx", "-g", "daemon off;"]
    networks:
      - landbike_network

volumes:
  postgres_data:

networks:
  landbike_network:
    driver: bridge
